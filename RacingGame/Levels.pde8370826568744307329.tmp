
void level_1() {
  if (stop == false) {
    playerX = 25;
    playerY = 20;
    playerX2 = 25;
    playerY2 = 50;
    stop = true;
  }


  if (displayed == false) {
    setImages("level1.png", "level1Detail.png");
  }
  if (countdown == false) { 
    countdown(displayImage);
  }

  if (lap_count1 != 5 || lap_count2 != 5) {
    if (checkpoint1 == false) {
      checkpoint1 = checkpoint_gate(playerX, playerY, checkpoint1, 626, 519, 750, 613); // X1, X2, Y1, Y2
    }
    if (checkpoint2 == false) {
      checkpoint2 = checkpoint_gate(playerX2, playerY2, checkpoint2, 626, 519, 750, 613);
    }
    if (lap_gate(playerX, playerY, lap1, checkpoint1, 234, 111, 102, 0) == true) {
      checkpoint1 = false;
      lap1 = false;
      lap_count1 = lap_count1 + 1;
    }
  }
  if (lap_gate(playerX2, playerY2, lap2, checkpoint2, 234, 111, 102, 0) == true) {
    checkpoint2 = false;
    lap2 = false;
    lap_count2 = lap_count2 + 1;
  }

  slow1 = slow_gate(playerX, playerY, slow1, 750, 680, 461, 129);
  slow2 = slow_gate(playerX2, playerY2, slow2, 750, 680, 461, 129);

  fast1 = fast_gate(playerX, playerY, fast1, 557, 256, 380, 176);
  fast2 = fast_gate(playerX2, playerY2, fast2, 557, 256, 380, 176);

  playerSpeed1 = playerSpeedChange(playerSpeed1, slow1, fast1);
  playerSpeed2 = playerSpeedChange(playerSpeed2, slow2, fast2);

  slow1 = false;
  slow2 = false;
  fast1 = false;
  fast2 = false;

  level1_winner = level_colour(level1_winner);
}

void level_2() {
  if (stop == false) {
    playerX = 200;
    playerY = 665;
    playerX2 = 200;
    playerY2 = 685;
    stop = true;
  }

  if (displayed == false) {
    setImages("level2.png", "level2Detail.png");
  }
  if (countdown == false) { 
    countdown(displayImage);
  }

  if (lap_count1 != 5 || lap_count2 != 5) {
    if (checkpoint1 == false) {
      checkpoint1 = checkpoint_gate(playerX, playerY, checkpoint1, 476, 426, 280, 243); // X1, X2, Y1, Y2
    }
    if (checkpoint2 == false) {
      checkpoint2 = checkpoint_gate(playerX2, playerY2, checkpoint2, 476, 426, 280, 243);
    }
    if (lap_gate(playerX, playerY, lap1, checkpoint1, 367, 285, 702, 656) == true) {
      checkpoint1 = false;
      lap1 = false;
      lap_count1 = lap_count1 + 1;
    }
  }
  if (lap_gate(playerX2, playerY2, lap2, checkpoint2, 367, 285, 702, 565) == true) {
    checkpoint2 = false;
    lap2 = false;
    lap_count2 = lap_count2 + 1;
  }

  slow1 = slow_gate(playerX, playerY, slow1, 580, 479, 164, 111);
  slow2 = slow_gate(playerX2, playerY2, slow2, 580, 479, 164, 111);

  fast1 = fast_gate(playerX, playerY, fast1, 567, 427, 98, 31);
  fast2 = fast_gate(playerX2, playerY2, fast2, 567, 427, 98, 31);

  playerSpeed1 = playerSpeedChange(playerSpeed1, slow1, fast1);
  playerSpeed2 = playerSpeedChange(playerSpeed2, slow2, fast2);

  slow1 = false;
  slow2 = false;
  fast1 = false;
  fast2 = false;

  level2_winner = level_colour(level2_winner);
}

void level_3() {
  if (stop == false) {
    playerX = 25;
    playerY = 7;
    playerX2 = 25;
    playerY2 = 23;
    stop = true;
  }

  if (displayed == false) {
    setImages("level3.png", "level3Detail.png");
  }

  if (countdown == false) { 
    countdown(displayImage);
  }

  if (lap_count1 != 5 || lap_count2 != 5) {
    if (checkpoint1 == false) {
      checkpoint1 = checkpoint_gate(playerX, playerY, checkpoint1, 308, 214, 710, 650); // X1, X2, Y1, Y2
    }
    if (checkpoint2 == false) {
      checkpoint2 = checkpoint_gate(playerX2, playerY2, checkpoint2, 308, 214, 710, 650);
    }
    if (lap_gate(playerX, playerY, lap1, checkpoint1, 140, 45, 37, 0) == true) {
      checkpoint1 = false;
      lap1 = false;
      lap_count1 = lap_count1 + 1;
    }
  }
  if (lap_gate(playerX2, playerY2, lap2, checkpoint2, 140, 45, 37, 0) == true) {
    checkpoint2 = false;
    lap2 = false;
    lap_count2 = lap_count2 + 1;
  }

  slow1 = slow_gate(playerX, playerY, slow1, 210, 53, 649, 482);
  slow2 = slow_gate(playerX2, playerY2, slow2, 210, 53, 649, 482);

  fast1 = fast_gate(playerX, playerY, fast1, 53, 0, 710, 595);
  fast2 = fast_gate(playerX2, playerY2, fast2, 53, 0, 710, 595);
  fast1 = fast_gate(playerX, playerY, fast1, 145, 50, 710, 595);
  fast2 = fast_gate(playerX2, playerY2, fast2, 145, 50, 710, 595);

  playerSpeed1 = playerSpeedChange(playerSpeed1, slow1, fast1);
  playerSpeed2 = playerSpeedChange(playerSpeed2, slow2, fast2);

  if (prev_y >= playerY) {
    playerSize = bridge("Player1", playerX, playerY, playerSize, 250, 0, 527, 455, 316, 306, playerX, 229);
  }
  if (prev_y <= playerY) {
    playerSize = bridge("Player1", playerX, playerY, playerSize, 250, 0, 527, 455, 240, 230, playerX, 317);
  }
  if (prev_y2 >= playerY2) {
    playerSize2 = bridge("Player2", playerX2, playerY2, playerSize2, 250, 0, 527, 455, 316, 306, playerX2, 229);
  }
  if (prev_y2 <= playerY2) {
    playerSize2 = bridge("Player2", playerX2, playerY2, playerSize2, 250, 0, 527, 455, 240, 230, playerX2, 317);
  }

  slow1 = false;
  slow2 = false;
  fast1 = false;
  fast2 = false;

  level3_winner = level_colour(level3_winner);

  prev_y = playerY;
  prev_y2 = playerY2;
}

void level_4() {
  if (stop == false) {
    playerX = 615;
    playerY = 225;
    playerX2 = 635;
    playerY2 = 225;
    stop = true;
  }

  if (displayed == false) {
    setImages("level4.png", "level4Detail.png");
  }

  if (countdown == false) { 
    countdown(displayImage);
  }

  if (lap_count1 != 5 || lap_count2 != 5) {
    if (checkpoint1 == false) {
      checkpoint1 = checkpoint_gate(playerX, playerY, checkpoint1, 134, 66, 500, 413); // X1, X2, Y1, Y2
    }
    if (checkpoint2 == false) {
      checkpoint2 = checkpoint_gate(playerX2, playerY2, checkpoint2, 134, 66, 500, 413);
    }
    if (lap_gate(playerX, playerY, lap1, checkpoint1, 654, 604, 300, 238) == true) {
      checkpoint1 = false;
      lap1 = false;
      lap_count1 = lap_count1 + 1;
    }
  }
  if (lap_gate(playerX2, playerY2, lap2, checkpoint2, 654, 604, 300, 238) == true) {
    checkpoint2 = false;
    lap2 = false;
    lap_count2 = lap_count2 + 1;
  }

  slow1 = slow_gate(playerX, playerY, slow1, 238, 134, 548, 503);
  slow2 = slow_gate(playerX2, playerY2, slow2, 238, 134, 548, 503); 
  slow1 = slow_gate(playerX, playerY, slow1, 559, 491, 198, 138);
  slow2 = slow_gate(playerX2, playerY2, slow2, 559, 491, 198, 138);

  fast1 = fast_gate(playerX, playerY, fast1, 750, 0, 710, 548);
  fast2 = fast_gate(playerX2, playerY2, fast2, 750, 0, 710, 548);
  fast1 = fast_gate(playerX, playerY, fast1, 750, 0, 102, 0);
  fast2 = fast_gate(playerX2, playerY2, fast2, 750, 0, 102, 0);

  playerSpeed1 = playerSpeedChange(playerSpeed1, slow1, fast1);
  playerSpeed2 = playerSpeedChange(playerSpeed2, slow2, fast2);

  slow1 = false;
  slow2 = false;
  fast1 = false;
  fast2 = false;

  level4_winner = level_colour(level4_winner);
}

void level_5() {
  if (stop == false) {
    playerX = 50;
    playerY = 15;
    playerX2 = 50;
    playerY2 = 40;
    stop = true;
  }

  if (displayed == false) {
    setImages("level5.png", "level5Detail.png");
  }

  if (countdown == false) { 
    countdown(displayImage);
  }

  if (lap_count1 != 5 || lap_count2 != 5) {
    if (checkpoint1 == false) {
      checkpoint1 = checkpoint_gate(playerX, playerY, checkpoint1, 366, 263, 710, 649); // X1, X2, Y1, Y2
    }
    if (checkpoint2 == false) {
      checkpoint2 = checkpoint_gate(playerX2, playerY2, checkpoint2, 134, 263, 710, 649);
    }
    if (lap_gate(playerX, playerY, lap1, checkpoint1, 202, 101, 61, 0) == true) {
      checkpoint1 = false;
      lap1 = false;
      lap_count1 = lap_count1 + 1;
    }
  }
  if (lap_gate(playerX2, playerY2, lap2, checkpoint2, 202, 101, 61, 0) == true) {
    checkpoint2 = false;
    lap2 = false;
    lap_count2 = lap_count2 + 1;
  }

  playerSize = sizeChanger(playerX, playerY, playerSize, 0, 535, 379, 710, 0);
  playerSize = sizeChanger(playerX, playerY, playerSize, 0, 750, 0, 577, 426);
  playerSize2 = sizeChanger(playerX2, playerY2, playerSize2, 0, 535, 379, 710, 0);
  playerSize2 = sizeChanger(playerX2, playerY2, playerSize2, 0, 750, 0, 577, 426);

  playerSize = bridge("Player1", playerX, playerY, playerSize, 75, 7, 609, 596, 24, 0, playerX-50, playerY);
  playerSize2 = bridge("Player2", playerX2, playerY2, playerSize2, 75, 7, 609, 596, 24, 0, playerX2-50, playerY2);

  playerSize = bridge("Player1", playerX, playerY, playerSize, 50, 7, 622, 609, 36, 0, playerX-50, playerY);
  playerSize2 = bridge("Player2", playerX2, playerY2, playerSize2, 50, 7, 622, 609, 36, 0, playerX2-50, playerY2);

  level5_winner = level_colour(level5_winner);

  prev_y = playerY;
  prev_y2 = playerY2;
}

void level_6() {
  if (stop == false) {
    playerX = 50;
    playerY = 15;
    playerX2 = 50;
    playerY2 = 40;
    stop = true;
  }

  if (displayed == false) {
    setImages("level6.png", "level6Detail.png");
  }

  if (countdown == false) { 
    countdown(displayImage);
  }

  if (lap_count1 != 5 || lap_count2 != 5) {
    if (checkpoint1 == false) {
      checkpoint1 = checkpoint_gate(playerX, playerY, checkpoint1, 465, 322, 663, 612); // X1, X2, Y1, Y2
    }
    if (checkpoint2 == false) {
      checkpoint2 = checkpoint_gate(playerX2, playerY2, checkpoint2, 465, 322, 663, 612);
    }
    if (lap_gate(playerX, playerY, lap1, checkpoint1, 241, 139, 75, 0) == true) {
      checkpoint1 = false;
      lap1 = false;
      lap_count1 = lap_count1 + 1;
    }
  }
  if (lap_gate(playerX2, playerY2, lap2, checkpoint2, 241, 139, 75, 0) == true) {
    checkpoint2 = false;
    lap2 = false;
    lap_count2 = lap_count2 + 1;
  }



  if (prev_x <= playerX) {
    playerSize = bridge("Player1", playerX, playerY, playerSize, 0, 7, 750, 720, 75, 0, 27, playerY+75);//RED1
    playerSize = bridge("Player1", playerX, playerY, playerSize, 250, 0, 488, 470, 226, 151, playerX+90, playerY);// GREY1
    playerSize = bridge("Player1", playerX, playerY, playerSize, 0, 7, 750, 720, 225, 150, 27, playerY+350); //lightBlue1
    playerSize = bridge("Player1", playerX, playerY, playerSize, 0, 7, 750, 720, 575, 500, 27, playerY+95); //lightBlue1
    playerSize = bridge("Player1", playerX, playerY, playerSize, 0, 7, 160, 133, 700, 598, playerX+500, playerY); //lightBlue1

}
  if (prev_x >= playerX) {
    playerSize = bridge("Player1", playerX, playerY, playerSize, 0, 7, 26, 0, 150, 75, 719, playerY-75); //RED2
    playerSize = bridge("Player1", playerX, playerY, playerSize, 250, 0, 583, 567, 226, 151, playerX-90, playerY);// GREY2
    playerSize = bridge("Player1", playerX, playerY, playerSize, 0, 7, 26, 0, 575, 500, 719, playerY-350); //LIGHTBLUE2
    playerSize = bridge("Player1", playerX, playerY, playerSize, 0, 7, 26, 0, 710, 590, 719, playerY-75); //LIGHTBLUE2
    playerSize = bridge("Player1", playerX, playerY, playerSize, 0, 7, 160, 133, 700, 598, playerX-500, playerY); //lightBlue1

}
  if (prev_x2 <= playerX2) {
    playerSize2 = bridge("Player2", playerX2, playerY2, playerSize2, 0, 7, 750, 720, 75, 0, 27, playerY2+75); // RED1
    playerSize2 = bridge("Player2", playerX2, playerY2, playerSize2, 250, 0, 488, 470, 226, 151, playerX2+90, playerY2);// GREY1
    playerSize2 = bridge("Player2", playerX2, playerY2, playerSize2, 0, 7, 750, 720, 225, 150, 27, playerY2+350); //lightBlue1
    playerSize = bridge("Player2", playerX2, playerY2, playerSize2, 0, 7, 750, 720, 575, 500, 27, playerY2+75); //lightBlue1

}

  if (prev_x2 >= playerX2) {
    playerSize2 = bridge("Player2", playerX2, playerY2, playerSize2, 0, 7, 25, 0, 150, 75, 719, playerY2-75);// RED2
    playerSize2 = bridge("Player2", playerX2, playerY2, playerSize2, 250, 0, 583, 567, 226, 151, playerX2-90, playerY2);// GREY2
    playerSize2 = bridge("Player2", playerX2, playerY2, playerSize2, 0, 7, 26, 0, 575, 500, 719, playerY2-350); //RED2
    playerSize = bridge("Player2", playerX2, playerY2, playerSize2, 0, 7, 26, 0, 710, 590, 719, playerY2-75); //LIGHTBLUE2

}




  level6_winner = level_colour(level6_winner);

  prev_x = playerX;
  prev_x2 = playerX2;
}
String level_colour(String level_winner) {
  if (lap_count1 >= 5 && finished2 != true) {
    level_winner = "Player1";
  }
  if (lap_count2 >= 5 && finished1 != true) {
    level_winner = "Player2";
  }
  return level_winner;
}

boolean lap_gate(float playerX, float playerY, boolean lap, boolean checkpoint, float lap_X_upper, float lap_X_lower, float lap_Y_upper, float lap_Y_lower) {
  if (lap == false && checkpoint == true) {
    if (playerX <= lap_X_upper && playerX >= lap_X_lower) {
      if (playerY <= lap_Y_upper && playerY >= lap_Y_lower) {
        lap = true;
      }
    }
  }
  return lap;
}

boolean checkpoint_gate(float playerX, float playerY, boolean checkpoint, float check_X_upper, float check_X_lower, float check_Y_upper, float check_Y_lower) {
  if (checkpoint == false) {
    if (playerX <= check_X_upper && playerX >= check_X_lower) {
      if (playerY <= check_Y_upper && playerY >= check_Y_lower) {
        checkpoint = true;
      }
    }
  }
  return checkpoint;
}

boolean slow_gate(float playerX, float playerY, boolean slow, float slow_X_upper, float slow_X_lower, float slow_Y_upper, float slow_Y_lower) {
  if (playerX <= slow_X_upper && playerX >= slow_X_lower) {
    if (playerY <= slow_Y_upper && playerY >= slow_Y_lower) {
      slow = true;
    }
  }
  return slow;
}

boolean fast_gate(float playerX, float playerY, boolean fast, float fast_X_upper, float fast_X_lower, float fast_Y_upper, float fast_Y_lower) {
  if (playerX <= fast_X_upper && playerX >= fast_X_lower) {
    if (playerY <= fast_Y_upper && playerY >= fast_Y_lower) {
      fast = true;
    }
  }
  return fast;
}

float playerSpeedChange(float playerSpeed, boolean slow, boolean fast) {
  if (fast == true && slow == true) {
    playerSpeed = 6;
  }
  if (fast == false && slow == false) {
    playerSpeed = 6;
  }
  if (fast == true && slow == false) {
    playerSpeed = 9;
  }
  if (fast == false && slow == true) {
    playerSpeed = 1.5;
  }
  return playerSpeed;
}

boolean timer(float millis, boolean return_value) {
  if (timer == 0) {
    timer = (minute()*60)+(second()*60)+millis();
  }
  if ((minute()*60)+(second()*60)+millis()-timer >= millis) {
    timer = 0;
    return_value = true;
  }
  return return_value;
}

float bridge(String player, float playerX_1, float playerY_1, float playerSizeQ, float time, float sizeChangeAmount, float X_upper, float X_lower, float Y_upper, float Y_lower, float x_destination, float y_destination) {
  if (playerX_1 <= X_upper && playerX_1 >= X_lower) {
    if (playerY_1 <= Y_upper && playerY_1 >= Y_lower) {
      sizeChange = timer(time, sizeChange);
      playerSizeQ = sizeChangeAmount;

      if (sizeChange == true) {
        playerSizeQ = 7;
        if (player == "Player1") {
          playerX = x_destination;
          playerY = y_destination;
        }

        if (player == "Player2") {
          playerX2 = x_destination;
          playerY2 = y_destination;
        }
        sizeChange = false;
      }
    }
  }
  return playerSizeQ;
}

float sizeChanger(float playerX_1, float playerY_1, float playerSizeQ, float change, float X_upper, float X_lower, float Y_upper, float Y_lower) {
  if (playerX_1 <= X_upper && playerX_1 >= X_lower) {
    if (playerY_1 <= Y_upper && playerY_1 >= Y_lower) {
      playerSizeQ = change;
    }
  } else {
    playerSizeQ = 7;
  }
  return playerSizeQ;
}
